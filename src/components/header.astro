---
import Logo from "./logo.astro";
import ThemeToggleButton from "./theme_toggle.jsx";

interface Props {
  isPost?: boolean;
}

const { isPost = false } = Astro.props;
---

<header
  class={`${
    isPost ? "h-[85px]" : "h-20"
  } top-0 z-10 bg-white shadow-sm header dark:bg-zinc-900 transition-colors duration-500`}
>
  <div class="container flex mx-auto p-6 justify-between items-center">
    <a href="/">
      <Logo />
    </a>
    <div class="flex flex-row">
      <ThemeToggleButton client:load />
      <a
        id="open"
        class="cursor-pointer flex justify-center items-center h-8 w-8 z-11 ml-2"
      >
        <span
          class="block relative h-[3px] bg-gray-700 dark:bg-gray-100 w-[25px] after:absolute after:rounded after:w-full after:h-full after:-translate-y-[8px] after:bg-gray-700 dark:after:bg-gray-100 before:bg-gray-700 dark:before:bg-gray-100 before:absolute before:rounded before:w-full before:h-full before:translate-y-[8px]"
        ></span>
      </a>
    </div>
  </div>
  {
    isPost && (
      <div
        id="progress"
        class="h-[5px] w-full bg-slate-100 dark:bg-zinc-700 delay-300 transition-opacity ease-in z-[2]"
      >
        <span class="percentage bg-[#12bc84] w-0 block h-full" />
      </div>
    )
  }
</header>
<section
  aria-label="mobile"
  id="menu"
  class="fixed top-0 left-0 right-0 bottom-0 w-full h-full menu z-10 invisible"
>
  <div
    class="flex flex-col items-center justify-center relative z-[12] w-full h-full"
  >
    <a class="cursor-pointer close absolute top-6 right-6 opacity-0" id="close">
      <div
        class="flex justify-center items-center hover:rotate-180 transition-[transform] ease-linear relative h-8 w-8"
      >
        <span class="h-0.5 bg-white w-8 rotate-45 block absolute"></span>
        <span class="h-0.5 bg-white w-8 -rotate-45 block absolute"></span>
      </div>
    </a>
    <nav role="navigation">
      <ul class="navigation">
        <li
          class="font-montserrat font-bold tracking-widest text-4xl my-10 uppercase opacity-0 transition-opacity ease-in navigation-item"
        >
          <a
            href=""
            class="text-gray-400 hover:text-white hover:scale-105 ease-in transition-transform"
            >Inicio</a
          >
        </li>
        <li
          class="font-montserrat font-bold tracking-widest text-4xl my-10 uppercase opacity-0 transition-opacity ease-in navigation-item"
        >
          <a
            href=""
            class="text-gray-400 hover:text-white hover:scale-105 ease-in transition-transform"
            >Acerca</a
          >
        </li>
        <li
          class="font-montserrat font-bold tracking-widest text-4xl my-10 uppercase opacity-0 transition-opacity ease-in navigation-item"
        >
          <a
            href=""
            class="text-gray-400 hover:text-white hover:scale-105 ease-in transition-transform"
            >Categorias</a
          >
        </li>
      </ul>
    </nav>
  </div>
  <div
    class="opacity-0 bg-black top-0 left-0 right-0 bottom-0 w-full h-full absolute z-[11] transition-[opacity] delay-500 ease-in overlay"
  >
  </div>
</section>
<style is:global>
  .h-sticky {
    position: sticky;
    animation: 800ms ease-in-out 0s normal none 1 running slideInDown;
  }
  #close {
    transition: opacity 400ms cubic-bezier(0.39, 0.575, 0.565, 1);
    transition-delay: 700ms;
  }
  .active {
    visibility: visible;
  }
  .active .overlay {
    opacity: 0.9;
  }
  .active #close {
    opacity: 1;
  }
  .item-active {
    opacity: 1;
  }

  @keyframes slideInDown {
    from {
      -webkit-transform: translate3d(0, -100%, 0);
      transform: translate3d(0, -100%, 0);
      visibility: visible;
    }
    to {
      -webkit-transform: translate3d(0, 0, 0);
      transform: translate3d(0, 0, 0);
    }
  }
</style>
<script is:inline>
  document.addEventListener("astro:page-load", () => {
    //Elements
    const header = document.querySelector(".header");
    const open = document.getElementById("open");
    const close = document.getElementById("close");
    const menu = document.getElementById("menu");
    const items = document.querySelectorAll(".navigation-item");
    const progress = document.getElementById("progress");
    const percentageBar = document.querySelector(".percentage");
    let active = false;

    //Functions
    const toggleActive = () => {
      active = !active;
    };

    const toggleMenu = () => {
      toggleActive();
      menu?.classList.toggle("active");
      toggleItems();
    };

    const progressPercentage = () => {
      if (progress) {
        const docElement = document.documentElement;
        const docBody = document.body;
        const scrollTop = docElement.scrollTop || docBody.scrollTop;
        const scrollBottom =
          (docElement.scrollHeight || docBody.scrollHeight) -
          window.innerHeight;
        const percentage = (scrollTop / scrollBottom) * 100;
        percentageBar.style.width = `${percentage}%`;
      }
    };

    const toggleItems = () => {
      const _items = active ? items : [...items].reverse();
      _items.forEach((item, i) => {
        setTimeout(
          () => {
            if (active) {
              item.classList.add("item-active");
            } else {
              item.classList.remove("item-active");
            }
          },
          800 + i * 120,
        );
      });
    };

    //Bindings
    open.addEventListener("click", () => {
      toggleMenu();
    });
    close.addEventListener("click", () => {
      toggleMenu();
    });
    window?.addEventListener("scroll", (_) => {
      header?.classList.toggle("h-sticky", window.scrollY > 150);
      progressPercentage();
    });
  });
</script>
